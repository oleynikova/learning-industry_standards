//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"МесяцВДатеРожденияЧеловекаРавен04()","МесяцВДатеРожденияЧеловекаРавен04","И месяц в дате рождения человека равен 04");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДеньВДатеРожденияЧеловекаРавен(Парам01)","ДеньВДатеРожденияЧеловекаРавен","Допустим день в дате рождения человека равен 25");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"МесяцВДатеРожденияЧеловекаРавен(Парам01)","МесяцВДатеРожденияЧеловекаРавен","И месяц в дате рождения человека равен 4");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ГодВДатеРожденияЧеловекаРавен(Парам01)","ГодВДатеРожденияЧеловекаРавен","И год в дате рождения человека равен 1988");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастЧеловекаВМесяцахРавен(Парам01)","ВозрастЧеловекаВМесяцахРавен","Тогда возраст человека в месяцах равен 340");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим день в дате рождения человека равен 25
//@ДеньВДатеРожденияЧеловекаРавен(Парам01)
Процедура ДеньВДатеРожденияЧеловекаРавен(ДеньВДатеРождения) Экспорт
	Контекст.Вставить("ДеньВДатеРождения", ДеньВДатеРождения);
КонецПроцедуры

&НаКлиенте
//И месяц в дате рождения человека равен 4
//@МесяцВДатеРожденияЧеловекаРавен()
Процедура МесяцВДатеРожденияЧеловекаРавен(МесяцВДатеРождения) Экспорт
	Контекст.Вставить("МесяцВДатеРождения", МесяцВДатеРождения);
КонецПроцедуры

&НаКлиенте
//И год в дате рождения человека равен 1988
//@ГодВДатеРожденияЧеловекаРавен(Парам01)
Процедура ГодВДатеРожденияЧеловекаРавен(ГодВДатеРождения) Экспорт
	Контекст.Вставить("ГодВДатеРождения", ГодВДатеРождения);
КонецПроцедуры

&НаКлиенте
//Тогда возраст человека в месяцах равен 340
//@ВозрастЧеловекаВМесяцахРавен(Парам01)
Процедура ВозрастЧеловекаВМесяцахРавен(ОжидаемыйРезультат) Экспорт
	
	Результат = ОбщийМодуль1.ПолучитьРезультатРасчетаВозрастаВМесяцах(Контекст.ДеньВДатеРождения, Контекст.МесяцВДатеРождения, Контекст.ГодВДатеРождения);
	Если НЕ Результат = ОжидаемыйРезультат Тогда
		ВызватьИсключение "Возраст человека в месяцах рассчитан не верно"; 
	КонецЕсли;

КонецПроцедуры

//окончание текста модуля
